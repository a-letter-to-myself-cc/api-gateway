# api-gateway > default.conf 

server {
    listen 80;
    server_name localhost;

    # web-client에게 html 렌더 요청하는 url
    location  / {
        proxy_pass http://web-clien:80/;
    }

    location  /auth/login/ { # 이 경로로 요청시 아래 url로 전달. web-client에게 전달
        proxy_pass http://web-client:80/auth/login/;
    }

    location  /auth/signup/ { # 이 경로로 요청시 아래 url로 전달
        proxy_pass http://web-client:80/auth/signup/;
    }

    location /auth/mypage/ {
        proxy_pass http://web-client:80/auth/mypage/;
    }

    location /letters/letter/ {
        proxy_pass http://web-client:80/letters/letter/;
    }
    
    location /letters/writing/ {
        proxy_pass http://web-client:80/letters/writing/;
    }

    location /profile/ {
        proxy_pass http://web-client:80/profile/;
    }

    location /routines/ {
        proxy_pass http://web-client:80/routines/;
    }





    # 각 백엔드 서비스에게 api 요청하는 url (html 내부에서 필요에 따라 호출)

    #auth-service
    location  /api/auth/login/ { # 로그인 api auth-service로 전달
        proxy_pass http://auth-service:8001/auth/login/;
    }
    location  /api/auth/signup/ {
        proxy_pass http://auth-service:8001/auth/signup/;
    }
    location /api/auth/mypage/ {
        proxy_pass http://auth-service:8001/auth/mypage/;
    }
    location /api/auth/logout/ {
        proxy_pass http://auth-service:8001/auth/logout/;
    }
    location /api/auth/internal/verify/ {
        proxy_pass http://auth-service:8001/auth/internal/verify/;
    }


    #user-service
    location /api/user/profile/ {
        proxy_pass http://user-service:8002/user/profile/update/;
    }
    locaion /api/user/internal/get/ {
        proxy_pass http://user-service:8002/user/internal/get/;
    }
    location /api/user/internal/users/ {
        proxy_pass http://user-service:8002/user/internal/users/;
    }


    #routine-service 검토 필요
    location /api/routines/admin/ {
        proxy_pass http://routine-service:8003/routines/admin/;
    }


    #scheduler-service
    location /api/scheduler/status/ {
        proxy_pass http://scheduler-service:8004/scheduler/status/;
    }


    #notification-service
    location /api/notify/send/ {
        proxy_pass http://notification-service:8005/notify/send/;
    }
    location/api/notify/eamil/ {
        proxy_pass http://notification-service:8005/notify/email/;
    }


    #letter-service
    location /api/letters/write/ {
        proxy_pass http://letter-service:8006/letters/write/;
    }
    location /api/letters/ {
        proxy_pass http://letter-service:8006/letters/;
    }
    location /api/letters/ {
        proxy_pass http://letter-service:8006/letters/api/letters/;
    }
    location /api/letters/delete/ {
        proxy_pass http://leter-service:8006/letters/delete/;
    }


    #letter-storage-service 검토 필요
    locaion /api/api/images/ {
        proxy_pass http://letter-storage-service:8007/api/images/;
    }
    location /api/api/images/path/ {
        proxy_pass http://letter-storage-service:8007/api/images/;
    }


    #emotion-analysis-service
    locaion /api/api/emotions/ {
        proxy_pass http://emotion-analysis-service:8008/api/emotions/analyze/;
    }


    #emotion-store-service
    locaion /api/api/emotion-results/ {
        proxy_pass http://emotion-store-service:8009/api/emotion-results/;
    }
    location /api/api/emotions/ {
        proxy_pass http://emotion-store-service8009/api/emotions/;
    }


    #recommend-service
    locaion /api/api/recommend/ {
        proxy_pass http://emotion-recommendation-service:8010/api/recommend/;
    }
    locaion /api/api/recommendations/ {
        proxy_pass http://emotion-recommendation-service:8010/api/recommendations/;
    }
    locaion /api/feedback/save {
        proxy_pass http://emotion-recommendation-service:8010/feedback/save/;
    }
}
server {
    listen 80;
    server_name localhost;

    # ✅ 정적 리소스 요청 처리
    location /static/ {
        proxy_pass http://web-client-service:80/static/;
    }

    # ✅ HTML 렌더링 기본 요청
    location / {
        proxy_pass http://web-client-service:80/;
    }

    location /auth/login/ {
        proxy_pass http://web-client-service:80/auth/login/;
    }

    location /auth/signup/ {
        proxy_pass http://web-client-service:80/auth/signup/;
    }

    location /auth/mypage/ {
        proxy_pass http://web-client-service:80/auth/mypage/;
    }

    location /letters/letter/ {
        proxy_pass http://web-client-service:80/letters/letter/;
    }

    location /letters/writing/ {
        proxy_pass http://web-client-service:80/letters/writing/;
    }

    location /routines/ {
        proxy_pass http://web-client-service:80/routines/;
    }

    # 이하 생략 (API 백엔드 서비스들)

    # 각 백엔드 서비스에게 api 요청하는 url (html 내부에서 필요에 따라 호출)

    # #auth-service
    # location  /api/auth/login/ { # 로그인 api auth-service로 전달
    #     proxy_pass http://auth-service:8001/auth/login/;
    # }
    # location  /api/auth/signup/ {
    #     proxy_pass http://auth-service:8001/auth/signup/;
    # }
    # location /api/auth/mypage/ {
    #     proxy_pass http://auth-service:8001/auth/mypage/;
    # }
    # location /api/auth/logout/ {
    #     proxy_pass http://auth-service:8001/auth/logout/;
    # }
    # location /api/auth/internal/verify/ {
    #     proxy_pass http://auth-service:8001/auth/internal/verify/;
    # }

    # #auth-service
    location /api/auth/ { 
        proxy_pass http://auth-service:8001/;
    }

    #user-service
    location /api/user/profile/ {
        proxy_pass http://user-service:8002/user/profile/update/;
    }
    location /api/user/internal/get/ {
        proxy_pass http://user-service:8002/user/internal/get/;
    }
    location /api/user/internal/users/ {
        proxy_pass http://user-service:8002/user/internal/users/;
    }


    #routine-service 검토 완료
    location /api/routines/ {
        if ($request_method = OPTIONS ) {
            add_header Access-Control-Allow-Origin http://web-client-service;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, X-CSRFToken";
            add_header Access-Control-Allow-Credentials true;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }

        proxy_pass http://routine-service:8003;
        add_header Access-Control-Allow-Origin http://web-client-service;
        add_header Access-Control-Allow-Credentials true;
        add_header Access-Control-Allow-Headers "Content-Type, X-CSRFToken";
    }



    #notification-service
    location /api/notify/send/ {
        proxy_pass http://notification-service:8005/notify/send/;
    }
    location /api/notify/email/ {
        proxy_pass http://notification-service:8005/notify/email/;
    }

#이건잠깐내가주석처리!!!!!!!!!!!!!!!!!!!!!!!!!
    # #letter-service 검토필요
    # location /api/letters/write/ {
    #     proxy_pass http://letter-service:8006/letters/write/;
    # }
    # location /api/letters/ {
    #     proxy_pass http://letter-service:8006/letters/;
    # }
    # location /api/letters/delete/ {
    #     proxy_pass http://letter-service:8006/letters/delete/;
    # }






    # #letter-storage-service 검토 필요 (쿠버네티스 yaml파일에는 letter-storage-service가 없어서 못 찾습니다...)
    # location /api/api/images/ {
    #     proxy_pass http://letter-storage-service:8007/api/images/;
    # }
    # location /api/api/images/path/ {
    #     proxy_pass http://letter-storage-service:8007/api/images/;
    # }


    # emotion 서비스 임시 주석처리
    # #emotion-analysis-service
    # location /api/api/emotions/ {
    #     proxy_pass http://emotion-analysis-service:8008/api/emotions/analyze/;
    # }


    # #emotion-store-service
    # location /api/api/emotion-results/ {
    #     proxy_pass http://emotion-store-service:8009/api/emotion-results/;
    # }
    # location /api/api/emotions/ {
    #     proxy_pass http://emotion-store-service:8009/api/emotions/;
    # }


    # #recommend-service
    # location /api/api/recommend/ {
    #     proxy_pass http://emotion-recommendation-service:8010/api/recommend/;
    # }
    # location /api/api/recommendations/ {
    #     proxy_pass http://emotion-recommendation-service:8010/api/recommendations/;
    # }
    # location /api/feedback/save {
    #     proxy_pass http://emotion-recommendation-service:8010/feedback/save/;
    # }
}
